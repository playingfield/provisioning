---

- name: Configure kernel
  sysctl:
    name: user.max_user_namespaces
    value: 31559
    state: present

- name: Install dependencies
  ansible.builtin.package:
    name:
      - python3-cryptography
      - python3-jinja2

- name: Check bundle checksum file
  ansible.builtin.stat:
    path: "{{ aap_tmp_dir ~ aap_shasums }}"
  register: aap_checksum

- name: Get bundle checksum file
  ansible.builtin.get_url:
    url: "{{ aap_checksum_file_url }}"
    dest: "{{ aap_tmp_dir ~ aap_shasums }}"
  tags: installation
  when: not aap_checksum.stat.exists | bool

- name: Get bundle checksum
  ansible.builtin.command: "grep {{ aap_setup_bundle }} {{ aap_tmp_dir ~ aap_shasums }}"
  changed_when: false
  register: aap_sha256

- name: Check bundle file
  ansible.builtin.stat:
    path: "{{ aap_tmp_dir ~  aap_setup_bundle }}"
  register: aap_package

- name: "Download setup bundle"
  ansible.builtin.get_url:
    url: "{{ aap_setup_download_url }}"
    dest: "{{ aap_tmp_dir ~ aap_setup_bundle }}"
    checksum: "sha256:{{ aap_sha256.stdout.split(' ') | first }}"
    timeout: "42"
  when: not aap_package.stat.exists | bool

- name: Unarchive setup_bundle
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ aap_tmp_dir ~ aap_setup_bundle }}"
    dest: "{{ aap_tmp_dir }}"
    creates: "{{ tmp_dir ~ aap_setup_dir }}"
  tags:
    - tower

- name: Create ansible.cfg
  ansible.builtin.template:
    src: "ansible.cfg.j2"
    dest: "{{ aap_tmp_dir ~ aap_setup_dir }}/ansible.cfg"
    mode: 0644
  tags:
    - tower

- name: Create /var/log/tower directory
  ansible.builtin.file:
    path: /var/log/tower/
    mode: 0755
    state: directory
  tags:
    - tower

- name: Place inventory file for setup.sh
  ansible.builtin.template:
    src: inventory.j2
    dest: "{{ aap_tmp_dir ~ aap_setup_dir }}/inventory"
    mode: 0644
  tags:
    - tower
    - setup

- name: Declare variable for tower_state
  ansible.builtin.set_fact:
    tower_state: 'unknown'
  tags:
    - tower
    - test

- name: Check which services are running
  no_log: true
  ansible.builtin.service_facts:
  tags:
    - tower
    - test

- name: Set tower_state fact
  ansible.builtin.set_fact:
    tower_state: "{{ ansible_facts.services['ansible-tower.service']['state'] }}"
  when: ansible_facts.services['ansible-tower.service'] is defined
  tags:
    - tower
    - test

- name: Running Tower setup.sh, time for a 15 minute break?
  become: true
  async: 3600
  poll: 60
  ansible.builtin.command: bash -lc "cd {{ aap_tmp_dir ~ aap_setup_dir }} && bash ./setup.sh"
  when:
    - role is defined
    - tower_state == 'unknown'
  tags:
    - tower
    - setup

- name: Fix permissions on shared library directories
  when: role is defined
  ansible.builtin.file:
    path: "{{ item }}"
    group: root
  loop:
    - /lib64/redis
    - /usr/lib64/redis
    - /lib64/redis/modules
    - /usr/lib64/redis/modules

- name: Wait for Tower to be ready
  block:
    - name: Verify ports
      ansible.builtin.wait_for:
        port: "{{ item }}"
      with_items:
        - 80
        - 443
      tags:
        - tower
        - test

    - name: Check again which services are running
      ansible.builtin.service_facts:
      no_log: true
      tags:
        - tower
        - test

    - name: Display supervisord state
      ansible.builtin.debug:
        var: ansible_facts.services['supervisord.service']
      tags:
        - tower
        - test

    - name: Verify url
      ansible.builtin.uri:
        url: "https://{{ primary_machine }}/#/login"
        validate_certs: "{{ tower_validate_certs }}"
        status_code: 200
      tags:
        - tower
        - test
  when: role is defined
...
