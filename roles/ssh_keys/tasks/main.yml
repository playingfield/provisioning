---
- name: Ensure ssh directory
  ansible.builtin.file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Generate ssh-key for root
  delegate_to: localhost
  connection: local
  become: false
  run_once: true
  ansible.builtin.command: "ssh-keygen -t rsa -b 4096 -f files/{{ ssh_keyname }}_rsa -N '' -q -C aap"
  args:
    creates: "files/{{ ssh_keyname }}_rsa"

- name: Set ssh pub_key fact
  ansible.builtin.set_fact:
    pub_key: "files/{{ ssh_keyname }}_rsa.pub"

- name: Install authorized_keys for ansible user
  ansible.posix.authorized_key:
    key: "{{ lookup('file', pub_key) }}"
    user: "{{ ansible_user }}"
    state: present

- name: Install private key for root
  become: true
  delegate_to: "{{ groups.automationcontroller[0] }}"
  ansible.builtin.copy:
    src: "files/{{ ssh_keyname }}_rsa"
    dest: /root/.ssh/
    mode: 0600

- name: Setup .ssh/config
  become: true
  delegate_to: "{{ groups.automationcontroller[0] }}"
  ansible.builtin.template:
    src: config
    dest: /root/.ssh/config
    owner: root
    group: root
    mode: 0600

- name: Generate known host records
  become: true
  delegate_to: "{{ groups.automationcontroller[0] }}"
  ansible.builtin.shell: ssh-keyscan -H {{ primary_machine }} {{ secondary_machine }} > /root/.ssh/known_hosts
  changed_when: true
