#!/usr/bin/env ansible-playbook
---

- name: Provision RHEL8 VM
  hosts: all:!localhost
  become: true
  gather_facts: true
  tags: [provision]
  pre_tasks:
    - name: Use RHEL8 ISO as Yum repo
      ansible.builtin.include_role:
        name: dvd_repository

    - name: Relax settings for install
      ansible.builtin.include_role:
        name: grace_period
        tasks_from: present

- name: Prepare AAP deployment
  hosts: aap
  become: true
  gather_facts: true
  tags: [prepare]
  pre_tasks:
    - name: Setup ssh keys for install
      ansible.builtin.include_role:
        name: ssh_keys

- name: Deploy AAP
  hosts: aap
  become: true
  gather_facts: true
  tags: [deploy]
  tasks:
    - name: Install Automation Platform
      ansible.builtin.include_role:
        name: aap

- name: Configure Local Authentication
  hosts: localhost
  become: false
  gather_facts: false

  vars:
    awx_host: "{{ groups.automationcontroller[0] }}"
    # yamllint disable-line rule:line-length
    cfg: "-k --conf.host https://{{ awx_host }} --conf.user {{ awx_user | default('admin', true) }}"

  pre_tasks:
    - name: Install collections
      changed_when: true
      # yamllint disable-line rule:line-length
      ansible.builtin.command: "ansible-galaxy collection install -r collections/requirements.yml"

    - name: Login to Tower
      no_log: false
      changed_when: false
      ansible.builtin.command: "awx {{ cfg }} --conf.password {{ admin_password }} -k login"
      register: awx_login

    - name: Set awx_token
      ansible.builtin.set_fact:
        awx_token: "{{ awx_login.stdout | from_json | json_query('token') }}"

    - name: Create ~/.tower_cli.cfg
      ansible.builtin.template:
        src: tower_cli.cfg
        dest: "~/.tower_cli.cfg"
        mode: 0600

- name: Configure Ansible Controller post installation
  hosts: localhost
  connection: local
  vars_files:
    - configs/controller_auth.yml
  collections:
    - awx.awx
    - redhat_cop.controller_configuration

  pre_tasks:

    - name: Wait for Controller to come up
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}/api/v2/ping"
        status_code: 200
        validate_certs: "{{ controller_validate_certs }}"
      register: result
      until: result.status == 200
      retries: 20
      delay: 30
      ignore_errors: true

    - name: Sleep for 10 seconds and allow awx to come up.
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: Include vars from configs directory
      ansible.builtin.include_vars:
        dir: ./configs
        ignore_files: [controller_auth.yml]
        extensions: ["yml"]
      tags:
        - always

  roles:
    - dispatch  # The dispatch role calls all of the other roles.
